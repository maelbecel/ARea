{
	"info": {
		"_postman_id": "60694957-c862-4367-b39c-5f603ee27076",
		"name": "Area51Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24204306",
		"_collection_link": "https://grey-satellite-975754.postman.co/workspace/My-Workspace~1b96993a-a7ae-49b3-8f6f-e90d93b127a5/collection/24204306-60694957-c862-4367-b39c-5f603ee27076?action=share&source=collection_link&creator=24204306"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "400 - Bad email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bad email detected\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});\r",
											"pm.test(\"Bad email message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid email address!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"zertus\",\r\n    \"username\": \"Test\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/register",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Verify token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.not.null;\r",
											"    pm.globals.set(\"TOKEN\", jsonData.data);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": {{TEST_EMAIL}},\r\n    \"username\": {{TEST_USERNAME}},\r\n    \"password\": {{TEST_PASSWORD}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/register",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "409 - Already use email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"Check message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Email address already in use!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": {{TEST_EMAIL}},\r\n    \"username\": \"Test2\",\r\n    \"password\": {{TEST_PASSWORD}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/register",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "409 - Already use username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"Check message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Username already in use!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"mysuper@test.fr\",\r\n    \"username\": {{TEST_USERNAME}},\r\n    \"password\": {{TEST_PASSWORD}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/register",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"register"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "200 - Good login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": {{TEST_EMAIL}},\r\n    \"password\": {{TEST_PASSWORD}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/login",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Bad credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test@test.fr\",\r\n    \"password\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/login",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get current",
					"item": [
						{
							"name": "200 - Good",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Not authorize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify",
					"item": [
						{
							"name": "204 - Good token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/user/verify?token={{TOKEN}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"verify"
									],
									"query": [
										{
											"key": "token",
											"value": "{{TOKEN}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Bad token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/user/verify?token=mybadtoken",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"verify"
									],
									"query": [
										{
											"key": "token",
											"value": "mybadtoken"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Patch current",
					"item": [
						{
							"name": "200 - Update email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Update token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.not.null;\r",
											"    pm.globals.set(\"TOKEN\", jsonData.data);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": {{TEST_NEWEMAIL}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Update username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Update token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.not.null;\r",
											"    pm.globals.set(\"TOKEN\", jsonData.data);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": {{TEST_NEWUSERNAME}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Update password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Update token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.not.null;\r",
											"    pm.globals.set(\"TOKEN\", jsonData.data);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPassword\": {{TEST_PASSWORD}},\r\n    \"newPassword\": {{TEST_NEWPASSWORD}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete current",
					"item": [
						{
							"name": "204 - Delete correctly",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"pm.globals.unset(\"TOKEN\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{HOST}}/user/me",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Service",
			"item": [
				{
					"name": "Get services",
					"item": [
						{
							"name": "200 - List of service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Give a list\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/service",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"service"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Get one service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Slug of service is equals\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var data = jsonData.data;\r",
											"    pm.expect(data.slug).not.null;\r",
											"    var slug = data.slug;\r",
											"    pm.expect(slug).to.exist;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/service/{{TEST_SERVICE}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"service",
										"{{TEST_SERVICE}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Oauth2",
					"item": [
						{
							"name": "TempToken",
							"item": [
								{
									"name": "200 - Get temp token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Get oauth2\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data).not.null;\r",
													"    pm.globals.set(\"OAUTH2_TEMP_TOKEN\", jsonData.data);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{HOST}}/service/{{TEST_SERVICE}}/oauth2/token",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"service",
												"{{TEST_SERVICE}}",
												"oauth2",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "302 - Good redirect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.unset(\"OAUTH2_TEMP_TOKEN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/service/{{TEST_SERVICE}}/oauth2?redirecturi=https://localhost:8081&authToken={{OAUTH2_TEMP_TOKEN}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"service",
										"{{TEST_SERVICE}}",
										"oauth2"
									],
									"query": [
										{
											"key": "redirecturi",
											"value": "https://localhost:8081"
										},
										{
											"key": "authToken",
											"value": "{{OAUTH2_TEMP_TOKEN}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Actions & Reactions",
			"item": [
				{
					"name": "Action",
					"item": [
						{
							"name": "200 - Action inputs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Have correct data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).not.null\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/action/{{TEST_ACTION_SLUG}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"action",
										"{{TEST_ACTION_SLUG}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Action not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/action/test",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"action",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reaction",
					"item": [
						{
							"name": "200 - Reaction inputs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Have correct data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).not.null\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/reaction/{{TEST_REACTION_SLUG}}/{{TEST_ACTION_SLUG}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"reaction",
										"{{TEST_REACTION_SLUG}}",
										"{{TEST_ACTION_SLUG}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Reaction not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/reaction/test/{{TEST_ACTION_SLUG}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"reaction",
										"test",
										"{{TEST_ACTION_SLUG}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Reactions inputs action not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{HOST}}/reaction/{{TEST_REACTION_SLUG}}/test",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"reaction",
										"{{TEST_REACTION_SLUG}}",
										"test"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST",
			"value": "https://area51.zertus.fr",
			"type": "string"
		},
		{
			"key": "TEST_USERNAME",
			"value": "testpostman",
			"type": "string"
		},
		{
			"key": "TEST_EMAIL",
			"value": "test@test-postman.fr",
			"type": "string"
		},
		{
			"key": "TEST_PASSWORD",
			"value": "test",
			"type": "string"
		},
		{
			"key": "TEST_NEWEMAIL",
			"value": "mytest@test-postman.fr",
			"type": "string"
		},
		{
			"key": "TEST_NEWUSERNAME",
			"value": "mysuperusername",
			"type": "string"
		},
		{
			"key": "TEST_NEWPASSWORD",
			"value": "test2",
			"type": "string"
		},
		{
			"key": "TEST_SERVICE",
			"value": "github",
			"type": "string"
		},
		{
			"key": "TEST_ACTION_SLUG",
			"value": "github.push-on-repo",
			"type": "string"
		},
		{
			"key": "TEST_REACTION_SLUG",
			"value": "discord.send-message-in-channel",
			"type": "string"
		}
	]
}